[{"C:\\Users\\PC\\Desktop\\trollo\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\trollo\\src\\App.js":"2","C:\\Users\\PC\\Desktop\\trollo\\src\\store\\configureStore.js":"3","C:\\Users\\PC\\Desktop\\trollo\\src\\pages\\board.jsx":"4","C:\\Users\\PC\\Desktop\\trollo\\src\\pages\\login.jsx":"5","C:\\Users\\PC\\Desktop\\trollo\\src\\sagas\\index.js":"6","C:\\Users\\PC\\Desktop\\trollo\\src\\reducers\\index.js":"7","C:\\Users\\PC\\Desktop\\trollo\\src\\reducers\\user.js":"8","C:\\Users\\PC\\Desktop\\trollo\\src\\hooks\\useInput.js":"9","C:\\Users\\PC\\Desktop\\trollo\\src\\components\\list\\list.jsx":"10","C:\\Users\\PC\\Desktop\\trollo\\src\\reducers\\board.js":"11","C:\\Users\\PC\\Desktop\\trollo\\src\\sagas\\user.js":"12","C:\\Users\\PC\\Desktop\\trollo\\src\\data\\board.js":"13","C:\\Users\\PC\\Desktop\\trollo\\src\\components\\list\\list_title.jsx":"14","C:\\Users\\PC\\Desktop\\trollo\\src\\components\\list\\card_content.jsx":"15","C:\\Users\\PC\\Desktop\\trollo\\src\\components\\common\\title.jsx":"16","C:\\Users\\PC\\Desktop\\trollo\\src\\pages\\cardDtail.jsx":"17","C:\\Users\\PC\\Desktop\\trollo\\src\\components\\modal\\CardModalComponent.jsx":"18","C:\\Users\\PC\\Desktop\\trollo\\src\\components\\CardDetailComponent\\cardDetail.jsx":"19","C:\\Users\\PC\\Desktop\\trollo\\src\\components\\modalMiniComoponent\\modalMiniComponent.jsx":"20","C:\\Users\\PC\\Desktop\\trollo\\src\\components\\header\\header.jsx":"21","C:\\Users\\PC\\Desktop\\trollo\\src\\sagas\\board.js":"22","C:\\Users\\PC\\Desktop\\trollo\\src\\components\\board\\navbar.jsx":"23"},{"size":444,"mtime":1610959717749,"results":"24","hashOfConfig":"25"},{"size":1181,"mtime":1611046646951,"results":"26","hashOfConfig":"25"},{"size":522,"mtime":1610959717761,"results":"27","hashOfConfig":"25"},{"size":1553,"mtime":1611046646957,"results":"28","hashOfConfig":"25"},{"size":2022,"mtime":1610959717753,"results":"29","hashOfConfig":"25"},{"size":222,"mtime":1611034048555,"results":"30","hashOfConfig":"25"},{"size":198,"mtime":1610959717756,"results":"31","hashOfConfig":"25"},{"size":1682,"mtime":1611034048553,"results":"32","hashOfConfig":"25"},{"size":455,"mtime":1610959717748,"results":"33","hashOfConfig":"25"},{"size":3449,"mtime":1611035833785,"results":"34","hashOfConfig":"25"},{"size":4909,"mtime":1611113318105,"results":"35","hashOfConfig":"25"},{"size":1029,"mtime":1611034048556,"results":"36","hashOfConfig":"25"},{"size":2025,"mtime":1611035833787,"results":"37","hashOfConfig":"25"},{"size":1593,"mtime":1611035833786,"results":"38","hashOfConfig":"25"},{"size":1717,"mtime":1611035833784,"results":"39","hashOfConfig":"25"},{"size":1393,"mtime":1611034048547,"results":"40","hashOfConfig":"25"},{"size":963,"mtime":1611112639279,"results":"41","hashOfConfig":"25"},{"size":4601,"mtime":1611113396124,"results":"42","hashOfConfig":"25"},{"size":1027,"mtime":1610956813795,"results":"43","hashOfConfig":"25"},{"size":711,"mtime":1611026625865,"results":"44","hashOfConfig":"25"},{"size":1341,"mtime":1611046646955,"results":"45","hashOfConfig":"25"},{"size":1490,"mtime":1611035833793,"results":"46","hashOfConfig":"25"},{"size":1416,"mtime":1611034048587,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"g9b1k5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\PC\\Desktop\\trollo\\src\\index.js",[],["104","105"],"C:\\Users\\PC\\Desktop\\trollo\\src\\App.js",["106"],"import \"./App.css\";\r\nimport { Layout } from \"antd\";\r\nimport styled from 'styled-components'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Login from './pages/login';\r\nimport Board from './pages/board';\r\nimport Header from './components/header/header'\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { useSelector } from 'react-redux';\r\nconst { Content } = Layout;\r\n\r\nconst LayoutContainer = styled(Layout)`\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 0 50px;\r\n  overflow-x: scroll;\r\n  background-color: ${props => props.bgColor ? \"#3C69A3\" : \"#fff\" }\r\n  \r\n`\r\nconst ContentContainer = styled(Content)`\r\n  flex: 1;\r\n  width: 100%;\r\n  margin-top: 100px;\r\n  position: relative;\r\n`\r\n\r\nfunction App() {\r\n  const {loginDone} = useSelector(state => state.user)\r\n  \r\n  return (\r\n    <LayoutContainer bgColor={loginDone}>\r\n      <Header/>\r\n      <ContentContainer>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/b\" component={Board} />\r\n        </Switch>\r\n      </ContentContainer>\r\n    </LayoutContainer>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\PC\\Desktop\\trollo\\src\\store\\configureStore.js",["107"],"import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport rootReducer from '../reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","C:\\Users\\PC\\Desktop\\trollo\\src\\pages\\board.jsx",["108"],"  \r\nimport React, { useCallback } from 'react';\r\nimport Navbar from '../components/board/navbar';\r\nimport List from '../components/list/list';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport { addListRequestAction } from '../reducers/board';\r\nconst AddListBtn = styled(Button)`\r\n  position: relative;\r\n  top: 10px;\r\n  background: transparent;\r\n  border: 0;\r\n  outline: 0;\r\n  color: black;\r\n`;\r\nconst Board = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const { board } = useSelector((state) => state.board);\r\n\r\n  const onDragEnd = useCallback(() => {\r\n    console.log('Completed DnD!');\r\n  }, []);\r\n\r\n  const onClickAddList = useCallback(() => {\r\n    dispatch(addListRequestAction());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar title={board.name} members={board.members} auth={board.auth}/>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable droppableId={board.name} direction=\"horizontal\">\r\n          {provided => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef} style={{display: 'flex'}}>\r\n              {board.lists.map(v => (\r\n                <List key={v.id} list={v}/>\r\n              ))}\r\n              {provided.placeholder}\r\n              <AddListBtn type=\"primary\" onClick={onClickAddList}>+ Add List</AddListBtn>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </>\r\n  )\r\n}\r\nexport default Board","C:\\Users\\PC\\Desktop\\trollo\\src\\pages\\login.jsx",["109","110","111"],"import React, { useCallback, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Input, Button, Space } from 'antd';\r\nimport useInput from '../hooks/useInput';\r\nimport styled from 'styled-components';\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { loginRequestAction } from '../reducers/user';\r\n\r\nconst FormContainer = styled(Form)`\r\n  margin: 0 auto;\r\n  width: 350px;\r\n  height: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst InputStyle = styled(Input)`\r\n  margin-bottom: 1em;\r\n  height: 3.2em;\r\n  padding: 0 1.3em;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-weight: bold;\r\n  color: #5e6c84;\r\n`;\r\nconst Login = ({history}) => {\r\n\r\n  const email = useInput(\"\");\r\n  const password = useInput(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loginLoading, loginDone, loginError } = useSelector( state => state.user);\r\n\r\n  useEffect(() => {\r\n    if(loginDone) {\r\n      history.replace(\"/b\");\r\n    }\r\n    if(loginError) {\r\n      alert(loginError);\r\n    }\r\n  }, [loginDone, loginError]);\r\n\r\n  const onLogin = useCallback(() => {\r\n    dispatch(loginRequestAction(email.value));\r\n    history.push('/');\r\n  }, [email.value, password.value]);\r\n\r\n  return (\r\n    <FormContainer onFinish={onLogin}>\r\n      <Title>Log in to Troller</Title>\r\n      <InputStyle\r\n        placeholder=\"input email\" \r\n        prefix={<UserOutlined />} \r\n        value={email.value}\r\n        onChange={email.onChange}  \r\n      />\r\n      <InputStyle\r\n        type=\"password\"\r\n        placeholder=\"input password\"\r\n        prefix={<LockOutlined />}\r\n        value={password.value}\r\n        onChange={password.onChange}  \r\n      />\r\n      <Space>\r\n        <a>회원가입</a>\r\n      <Button \r\n        type=\"primary\" \r\n        htmlType=\"submit\"\r\n        loading={loginLoading}\r\n      >\r\n        로그인\r\n      </Button>\r\n      </Space>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\PC\\Desktop\\trollo\\src\\sagas\\index.js",[],"C:\\Users\\PC\\Desktop\\trollo\\src\\reducers\\index.js",[],"C:\\Users\\PC\\Desktop\\trollo\\src\\reducers\\user.js",[],"C:\\Users\\PC\\Desktop\\trollo\\src\\hooks\\useInput.js",[],"C:\\Users\\PC\\Desktop\\trollo\\src\\components\\list\\list.jsx",[],"C:\\Users\\PC\\Desktop\\trollo\\src\\reducers\\board.js",[],"C:\\Users\\PC\\Desktop\\trollo\\src\\sagas\\user.js",[],"C:\\Users\\PC\\Desktop\\trollo\\src\\data\\board.js",[],"C:\\Users\\PC\\Desktop\\trollo\\src\\components\\list\\list_title.jsx",[],"C:\\Users\\PC\\Desktop\\trollo\\src\\components\\list\\card_content.jsx",["112"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ClockCircleOutlined } from '@ant-design/icons';\r\nimport { Avatar } from 'antd';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: .3em;\r\n`\r\nconst Label = styled.div`\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 8px;\r\n  border-radius: 2em;\r\n  background-color: ${props => props.color};\r\n  margin-right: .3em;\r\n`\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  position: relative;\r\n`\r\nconst DueDate = styled.div`\r\n  display: inline-block;\r\n  background: #fa9988;\r\n  border-radius: 4px;\r\n  color: white;\r\n  padding: .3em;\r\n  font-size: 12px;\r\n  line-height: 2;\r\n`\r\nconst AvatarStyle = styled(Avatar)`\r\n  display: inline-block;\r\n  margin-right: 4px;\r\n  \r\n`;\r\nconst Avatars = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\nconst CardContent = ({card}) => {\r\n  return (\r\n    <Container>\r\n      <div className=\"labelContainer\">\r\n        {card.label && card.label.map((v,idx) => (\r\n          <Label color={v} key={idx}/>\r\n        ))}\r\n      </div>\r\n      {card.title ?\r\n      <p>{card.title}</p>\r\n      :\r\n      <p>카드이름을 입력해주세요</p>\r\n      }\r\n      <InfoContainer>\r\n        {card.date && (\r\n          <DueDate>\r\n            <ClockCircleOutlined style={{marginRight: '4px'}}/>\r\n            <span>{card.date}</span>\r\n          </DueDate>\r\n        )}\r\n        <Avatars>\r\n        {card.members?.map((v,idx) => {\r\n          return <Avatar key={idx} style={{marginLeft: 2}}>{v[0]}</Avatar>\r\n        })}\r\n        </Avatars>\r\n      </InfoContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CardContent\r\n","C:\\Users\\PC\\Desktop\\trollo\\src\\components\\common\\title.jsx",["113"],"import React, { useCallback, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Input } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { editListTitleAction } from '../../reducers/board';\r\nconst TitleInput = styled(Input)`\r\n  display: inline-block;\r\n  background: transparent;\r\n  border: 0;\r\n  outline: 0;\r\n  border-radius: 4px;\r\n  &:focus {\r\n    background-color: white;\r\n    border: 1px solid skyblue;\r\n    color: black;\r\n  }\r\n  font-size: ${ props => props.big ? '1.3rem' : '1rem' };\r\n  color: ${props => props.big ? 'white' : 'black'};\r\n  width: ${props => props.big ? 'auto' : '80%'};\r\n  vertical-align: middle;\r\n`;\r\n\r\n// Enter누르면 focus 벗어나는거 추가 구현 필요\r\nconst Title = ({title, big, type, id}) => {\r\n  const [ titleValue, setTitleValue ] = useState(title);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeTitle = useCallback((e) => {\r\n    setTitleValue(e.target.value);\r\n    const body = {\r\n      id: parseInt(id),\r\n      data: e.target.value,\r\n    }\r\n    if(type === 'list') {\r\n      dispatch(editListTitleAction(body))\r\n    } else if (type === 'board'){\r\n      // editBoardTitleAction\r\n    } else if (type === 'card'){\r\n      // editCardTitleAction\r\n    }\r\n  }, [titleValue]);\r\n\r\n  return (\r\n    <TitleInput value={titleValue} onChange={onChangeTitle} big={big ? big : null} />\r\n  )\r\n}\r\n\r\nexport default Title\r\n","C:\\Users\\PC\\Desktop\\trollo\\src\\pages\\cardDtail.jsx",[],"C:\\Users\\PC\\Desktop\\trollo\\src\\components\\modal\\CardModalComponent.jsx",["114"],"import React, { useRef, useState } from 'react';\r\nimport styles from './CardModalComponent.module.scss'\r\nimport { AlignLeftOutlined, CreditCardOutlined } from '@ant-design/icons';\r\nimport \"./CardModalComponent.css\"\r\nimport { Input } from 'antd';\r\nimport ModalMiniComponent from '../modalMiniComoponent/modalMiniComponent';\r\nconst { TextArea } = Input;\r\nexport default function CardModalComponent({resetClick,clickedCardData,editInfo}){\r\n  const [activeItem,setActiveItem] = useState(\"none\")\r\n  const [isEditing,setIsEditing] = useState(false);\r\n  const [titleData,setTitleData] = useState(clickedCardData.title);\r\n  const [descData,setDescData] = useState(clickedCardData.description);\r\n  const titleInput = useRef(null);\r\n  return(\r\n    <div className={styles.modalBox}>\r\n      <section className={styles.modalSection}>\r\n        <header>\r\n          <div className={styles.cover} \r\n            style={{backgroundColor:clickedCardData.cover?clickedCardData.cover:\"inherit\"}}\r\n          >\r\n            <button onClick={resetClick} className={styles.closeBtn}>\r\n              <div></div>\r\n              <div></div>\r\n            </button>\r\n          </div>\r\n          <h2>\r\n            <div className={styles.titleIcon}>\r\n              <CreditCardOutlined/>\r\n            </div>\r\n            <TextArea \r\n              ref={titleInput}\r\n              value={clickedCardData.title?titleData:\"제목을 입력해주세요\"} \r\n              style={{\r\n                resize:'none',\r\n                boxShadow:activeItem===\"title\"?\"1px blue\":\"0\",\r\n                backgroundColor:activeItem===\"title\"?\"white\":\"transparent\",\r\n                color:clickedCardData.title?\"black\":\"gray\"\r\n              }}\r\n              onFocus={()=>{\r\n                setActiveItem(state=>\"title\");\r\n              }}\r\n              onBlur={\r\n                ()=>{\r\n                  setActiveItem(state=>state===\"title\"?\"none\":\"title\");\r\n                }\r\n              }\r\n              onChange={(e)=>{\r\n                setTitleData(()=>e.target.value);\r\n                editInfo(\"title\",e.target.value)\r\n              }}\r\n            />\r\n            <div className={styles.titleList}> in list <u>{\"기획\"}</u></div>\r\n          </h2>\r\n        </header>\r\n        <main>\r\n          <div className={styles.dataBox}>\r\n            <div className={styles.cardInfo}>\r\n              {clickedCardData.members && <ModalMiniComponent type=\"members\" members={clickedCardData.members} datas={[\"B\"]}/>}\r\n              {clickedCardData.label && <ModalMiniComponent type=\"labels\" labels={clickedCardData.label} datas={[\"yellow\",\"red\"]}/>}\r\n              {clickedCardData.date && <ModalMiniComponent type=\"labels\" labels={clickedCardData.label} datas={[\"yellow\",\"red\"]}/>}\r\n            </div>\r\n            <div className={styles.descrition}>\r\n              <h3>\r\n                <div className={styles.descritionIcon}>\r\n                  <AlignLeftOutlined />\r\n                </div>\r\n                Description\r\n              </h3>\r\n              <TextArea \r\n                className=\"desc\"\r\n                style={{\r\n                  resize:'none',\r\n                  boxShadow:activeItem===\"title\"?\"1px blue\":\"0\",\r\n                  border:0,\r\n                  backgroundColor:activeItem===\"desc\"?\"white\":\"rgba(9,30,66,.04)\"\r\n                }}\r\n                value={clickedCardData.description?descData:\"\"}\r\n                rows={4} \r\n                onFocus={()=>{\r\n                  setActiveItem(state=>\"desc\");\r\n                  setIsEditing(state=>!state);\r\n                }}\r\n                onBlur={\r\n                  ()=>{\r\n                    setActiveItem(state=>state===\"desc\"?\"none\":\"desc\");\r\n                  }\r\n                }\r\n                onChange={\r\n                  e=>{\r\n                    setDescData(()=>e.target.value);\r\n                    editInfo(\"descrition\",e.target.value)\r\n                  }\r\n                }\r\n                placeholder=\"Add a more detailed description\"\r\n              />\r\n              <div className={activeItem === \"desc\" ?  styles.descritionController : styles.hide}>\r\n                <button className={styles.saveBtn}>Save</button>\r\n                <button onClick={()=>{\r\n                  console.log(\"1\")\r\n                  setActiveItem(state=>\"none\")\r\n                }} className={styles.closeXBtn}>\r\n                  <span></span>\r\n                  <span></span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={styles.selectorBox}></div>\r\n        </main>\r\n      </section>\r\n    </div>\r\n  )\r\n}","C:\\Users\\PC\\Desktop\\trollo\\src\\components\\CardDetailComponent\\cardDetail.jsx",["115","116"],"C:\\Users\\PC\\Desktop\\trollo\\src\\components\\modalMiniComoponent\\modalMiniComponent.jsx",[],["117","118"],"C:\\Users\\PC\\Desktop\\trollo\\src\\components\\header\\header.jsx",["119","120"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logoutRequestAction } from '../../reducers/user';\r\nimport styles from './header.module.css';\r\n\r\nconst Header = () => {\r\n  const { user, loginDone, loginError } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (!loginDone) {\r\n      history.replace('/');\r\n    }\r\n    if (loginError) {\r\n      alert(loginError);\r\n    }\r\n  }, [loginDone, loginError]);\r\n\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = () => {\r\n    dispatch(logoutRequestAction());\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <header className={loginDone ? styles.header1 : styles.header2}>\r\n      <div className={styles.logo}>\r\n        <img src=\"./imgs/logo.png\" alt=\"Logo\" />\r\n      </div>\r\n      {/* 로그인 후 user버튼, 로그아웃 버튼 보여줌 */}\r\n      {loginDone && (\r\n        <div className={styles.buttons}>\r\n          <button className={styles.memberBtn}>{user && user.slice(0, 1).toUpperCase()}</button>\r\n          <button className={styles.logoutBtn} onClick={onLogout}>\r\n            <img src=\"./imgs/logout.png\" alt=\"Logout image\" />\r\n          </button>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\PC\\Desktop\\trollo\\src\\sagas\\board.js",[],"C:\\Users\\PC\\Desktop\\trollo\\src\\components\\board\\navbar.jsx",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":8,"column":10,"nodeType":"127","messageId":"128","endLine":8,"endColumn":25},{"ruleId":"125","severity":1,"message":"129","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":30,"column":6,"nodeType":"132","endLine":30,"endColumn":8,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":46,"column":6,"nodeType":"132","endLine":46,"endColumn":29,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"136","line":51,"column":6,"nodeType":"132","endLine":51,"endColumn":35,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":70,"column":9,"nodeType":"140","endLine":70,"endColumn":12},{"ruleId":"125","severity":1,"message":"141","line":33,"column":7,"nodeType":"127","messageId":"128","endLine":33,"endColumn":18},{"ruleId":"130","severity":1,"message":"142","line":41,"column":6,"nodeType":"132","endLine":41,"endColumn":18,"suggestions":"143"},{"ruleId":"125","severity":1,"message":"144","line":10,"column":10,"nodeType":"127","messageId":"128","endLine":10,"endColumn":19},{"ruleId":"125","severity":1,"message":"145","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":13},{"ruleId":"146","severity":1,"message":"147","line":22,"column":11,"nodeType":"140","endLine":22,"endColumn":15},{"ruleId":"121","replacedBy":"148"},{"ruleId":"123","replacedBy":"149"},{"ruleId":"130","severity":1,"message":"134","line":17,"column":6,"nodeType":"132","endLine":17,"endColumn":29,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":37,"column":13,"nodeType":"140","endLine":37,"endColumn":63},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'DragDropContext' is defined but never used.","Identifier","unusedVar","'composeWithDevTools' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["155"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["156"],"React Hook useCallback has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["157"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'AvatarStyle' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'dispatch', 'id', and 'type'. Either include them or remove the dependency array.",["158"],"'isEditing' is assigned a value but never used.","'style' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["153"],["154"],["159"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"162","fix":"168"},"Update the dependencies array to be: [dispatch]",{"range":"169","text":"170"},"Update the dependencies array to be: [history, loginDone, loginError]",{"range":"171","text":"172"},"Update the dependencies array to be: [dispatch, email.value, history]",{"range":"173","text":"174"},"Update the dependencies array to be: [dispatch, id, type]",{"range":"175","text":"176"},{"range":"177","text":"172"},[854,856],"[dispatch]",[1125,1148],"[history, loginDone, loginError]",[1270,1299],"[dispatch, email.value, history]",[1216,1228],"[dispatch, id, type]",[499,522]]